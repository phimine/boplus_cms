{"remainingRequest":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/c5281434/Documents/Project/yshopmall_qd-master/src/store/modules/user.js","dependencies":[{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/src/store/modules/user.js","mtime":1590767910000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.setUserInfo = exports.logOut = void 0;\n\nvar _login = require(\"@/api/login\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar user = {\n  state: {\n    token: (0, _auth.getToken)(),\n    user: {},\n    roles: [],\n    // 第一次加载菜单时用到\n    loadMenus: false\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.token = token;\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_LOAD_MENUS: function SET_LOAD_MENUS(state, loadMenus) {\n      state.loadMenus = loadMenus;\n    }\n  },\n  actions: {\n    // 登录\n    Login: function Login(_ref, userInfo) {\n      var commit = _ref.commit;\n      var rememberMe = userInfo.rememberMe;\n      return new Promise(function (resolve, reject) {\n        (0, _login.login)(userInfo.username, userInfo.password, userInfo.code, userInfo.uuid).then(function (res) {\n          (0, _auth.setToken)(res.token, rememberMe);\n          commit('SET_TOKEN', res.token);\n          setUserInfo(res.user, commit); // 第一次加载菜单时用到， 具体见 src 目录下的 permission.js\n\n          commit('SET_LOAD_MENUS', true);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo: function GetInfo(_ref2) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        (0, _login.getInfo)().then(function (res) {\n          setUserInfo(res, commit);\n          resolve(res);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    LogOut: function LogOut(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        (0, _login.logout)().then(function (res) {\n          logOut(commit);\n          resolve();\n        }).catch(function (error) {\n          logOut(commit);\n          reject(error);\n        });\n      });\n    },\n    updateLoadMenus: function updateLoadMenus(_ref4) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        commit('SET_LOAD_MENUS', false);\n      });\n    }\n  }\n};\n\nvar logOut = function logOut(commit) {\n  commit('SET_TOKEN', '');\n  commit('SET_ROLES', []);\n  (0, _auth.removeToken)();\n};\n\nexports.logOut = logOut;\n\nvar setUserInfo = function setUserInfo(res, commit) {\n  // 如果没有任何权限，则赋予一个默认的权限，避免请求死循环\n  if (res.roles.length === 0) {\n    commit('SET_ROLES', ['ROLE_SYSTEM_DEFAULT']);\n  } else {\n    commit('SET_ROLES', res.roles);\n  }\n\n  commit('SET_USER', res);\n};\n\nexports.setUserInfo = setUserInfo;\nvar _default = user;\nexports.default = _default;",null]}