{"remainingRequest":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!/Users/c5281434/Documents/Project/yshopmall_qd-master/src/views/shop/order_deleting/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/src/views/shop/order_deleting/index.vue","mtime":1590767910000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/c5281434/Documents/Project/yshopmall_qd-master/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport checkPermission from '@/utils/permission'\nimport initData from '@/mixins/crud'\nimport { del } from '@/api/yxStoreOrder'\nimport eForm from './form'\nimport eDetail from './detail'\nimport eRefund from './refund'\nimport editOrder from './edit'\nimport eRemark from './remark'\nimport ePrint from './print'\nimport { formatTime } from '@/utils/index'\nimport { gett } from '@/api/visits'\n\nexport default {\n  components: { eForm, eDetail, eRefund, editOrder, eRemark, ePrint },\n  mixins: [initData],\n  data() {\n    return {\n      delLoading: false, status: '-9', orderType: '0',createTime: '', checkList: [], printChecked: false, batchHandle: '', batchExport: '', listContent: [],\n      queryTypeOptions: [\n        { key: 'orderId', display_name: '订单号' },\n        { key: 'realName', display_name: '用户姓名' },\n        { key: 'userPhone', display_name: '用户电话' }\n      ],\n      statusOptions: [\n        { value: '0', label: '未支付' },\n        { value: '1', label: '未发货' },\n        { value: '2', label: '待收货' },\n        { value: '3', label: '待评价' },\n        { value: '4', label: '交易完成' },\n        // { value: '5', label: '待核销' },\n        { value: '-1', label: '退款中' },\n        { value: '-2', label: '已退款' },\n        { value: '-4', label: '已删除' }\n      ],\n      typeOptions: [\n        { value: '0', label: '所有订单' },\n        { value: '1', label: '普通订单' },\n        { value: '2', label: '拼团订单' },\n        { value: '3', label: '秒杀订单' },\n        { value: '4', label: '砍价订单' }\n      ],\n      handleOptions: [\n        {value: '', label: '批量操作'},\n        {value: '0', label: '批量打印'},\n      ],\n      exportOptions: [\n        {value: '', label: '批量导出'},\n        {value: '0', label: '导出全部'},\n        {value: '1', label: '导出选中'},\n      ],\n      caculateInfo: {\n        orderNum : 0,\n        storeNum : 0,\n        orderPrice : 0,\n        userNum : 0,\n      },\n    }\n  },\n  created() {\n    this.$nextTick(() => {\n      this.init()\n    })\n  },\n  methods: {\n    formatTime,\n    checkPermission,\n    handleOrder(tab, event) {\n      this.status = tab.name\n      this.toQuery()\n    },\n    beforeInit() {\n      this.url = 'api/yxStoreOrder'\n      const sort = 'id,desc'\n      this.params = { page: this.page, size: this.size, sort: sort, orderStatus: this.status, orderType: this.orderType, addTime: this.createTime, listContent: this.listContent  }\n      const query = this.query\n      const type = query.type\n      const value = query.value\n      if (type && value) { this.params[type] = value }\n      return true\n    },\n    subDelete(id) {\n      this.delLoading = true\n      del(id).then(res => {\n        this.delLoading = false\n        this.$refs[id].doClose()\n        this.dleChangePage()\n        this.init()\n        this.$notify({\n          title: '删除成功',\n          type: 'success',\n          duration: 2500\n        })\n      }).catch(err => {\n        this.delLoading = false\n        this.$refs[id].doClose()\n        console.log(err.response.data.message)\n      })\n    },\n    add() {\n      this.isAdd = true\n      this.$refs.form.dialog = true\n    },\n    edit(data) {\n      this.isAdd = false\n      const _this = this.$refs.form\n      _this.form = {\n        id: data.id,\n        orderId: data.orderId,\n        uid: data.uid,\n        realName: data.realName,\n        userPhone: data.userPhone,\n        userAddress: data.userAddress,\n        cartId: data.cartId,\n        freightPrice: data.freightPrice,\n        totalNum: data.totalNum,\n        totalPrice: data.totalPrice,\n        totalPostage: data.totalPostage,\n        payPrice: data.payPrice,\n        payPostage: data.payPostage,\n        deductionPrice: data.deductionPrice,\n        couponId: data.couponId,\n        couponPrice: data.couponPrice,\n        paid: data.paid,\n        payTime: data.payTime,\n        payType: data.payType,\n        addTime: data.addTime,\n        status: data.status,\n        refundStatus: data.refundStatus,\n        refundReasonWapImg: data.refundReasonWapImg,\n        refundReasonWapExplain: data.refundReasonWapExplain,\n        refundReasonTime: data.refundReasonTime,\n        refundReasonWap: data.refundReasonWap,\n        refundReason: data.refundReason,\n        refundPrice: data.refundPrice,\n        deliveryName: data.deliveryName,\n        deliverySn: data.deliverySn,\n        deliveryType: data.deliveryType,\n        deliveryId: data.deliveryId,\n        gainIntegral: data.gainIntegral,\n        useIntegral: data.useIntegral,\n        backIntegral: data.backIntegral,\n        mark: data.mark,\n        isDel: data.isDel,\n        unique: data.unique,\n        remark: data.remark,\n        merId: data.merId,\n        isMerCheck: data.isMerCheck,\n        combinationId: data.combinationId,\n        pinkId: data.pinkId,\n        cost: data.cost,\n        seckillId: data.seckillId,\n        bargainId: data.bargainId,\n        verifyCode: data.verifyCode,\n        storeId: data.storeId,\n        shippingType: data.shippingType,\n        isChannel: data.isChannel,\n        isRemind: data.isRemind,\n        isSystemDel: data.isSystemDel\n      }\n      _this.dialog = true\n    },\n    editOrder(data) {\n      this.isAdd = false\n      const _this = this.$refs.form3\n      _this.form = {\n        id: data.id,\n        orderId: data.orderId,\n        uid: data.uid,\n        realName: data.realName,\n        userPhone: data.userPhone,\n        userAddress: data.userAddress,\n        cartId: data.cartId,\n        freightPrice: data.freightPrice,\n        totalNum: data.totalNum,\n        totalPrice: data.totalPrice,\n        totalPostage: data.totalPostage,\n        payPrice: data.payPrice,\n        payPostage: data.payPostage,\n        deductionPrice: data.deductionPrice,\n        couponId: data.couponId,\n        couponPrice: data.couponPrice,\n        paid: data.paid,\n        payTime: data.payTime,\n        payType: data.payType,\n        addTime: data.addTime,\n        status: data.status,\n        refundStatus: data.refundStatus,\n        refundReasonWapImg: data.refundReasonWapImg,\n        refundReasonWapExplain: data.refundReasonWapExplain,\n        refundReasonTime: data.refundReasonTime,\n        refundReasonWap: data.refundReasonWap,\n        refundReason: data.refundReason,\n        refundPrice: data.refundPrice,\n        deliveryName: data.deliveryName,\n        deliveryType: data.deliveryType,\n        deliveryId: data.deliveryId,\n        gainIntegral: data.gainIntegral,\n        useIntegral: data.useIntegral,\n        backIntegral: data.backIntegral,\n        mark: data.mark,\n        isDel: data.isDel,\n        unique: data.unique,\n        remark: data.remark,\n        merId: data.merId,\n        isMerCheck: data.isMerCheck,\n        combinationId: data.combinationId,\n        pinkId: data.pinkId,\n        cost: data.cost,\n        seckillId: data.seckillId,\n        bargainId: data.bargainId,\n        verifyCode: data.verifyCode,\n        storeId: data.storeId,\n        shippingType: data.shippingType,\n        isChannel: data.isChannel,\n        isRemind: data.isRemind,\n        isSystemDel: data.isSystemDel\n      }\n      _this.dialog = true\n    },\n    remark(data) {\n      this.isAdd = false\n      const _this = this.$refs.form4\n      _this.form = {\n        id: data.id,\n        orderId: data.orderId,\n        uid: data.uid,\n        realName: data.realName,\n        userPhone: data.userPhone,\n        userAddress: data.userAddress,\n        cartId: data.cartId,\n        freightPrice: data.freightPrice,\n        totalNum: data.totalNum,\n        totalPrice: data.totalPrice,\n        totalPostage: data.totalPostage,\n        payPrice: data.payPrice,\n        payPostage: data.payPostage,\n        deductionPrice: data.deductionPrice,\n        couponId: data.couponId,\n        couponPrice: data.couponPrice,\n        paid: data.paid,\n        payTime: data.payTime,\n        payType: data.payType,\n        addTime: data.addTime,\n        status: data.status,\n        refundStatus: data.refundStatus,\n        refundReasonWapImg: data.refundReasonWapImg,\n        refundReasonWapExplain: data.refundReasonWapExplain,\n        refundReasonTime: data.refundReasonTime,\n        refundReasonWap: data.refundReasonWap,\n        refundReason: data.refundReason,\n        refundPrice: data.refundPrice,\n        deliveryName: data.deliveryName,\n        deliveryType: data.deliveryType,\n        deliveryId: data.deliveryId,\n        gainIntegral: data.gainIntegral,\n        useIntegral: data.useIntegral,\n        backIntegral: data.backIntegral,\n        mark: data.mark,\n        isDel: data.isDel,\n        unique: data.unique,\n        remark: data.remark,\n        merId: data.merId,\n        isMerCheck: data.isMerCheck,\n        combinationId: data.combinationId,\n        pinkId: data.pinkId,\n        cost: data.cost,\n        seckillId: data.seckillId,\n        bargainId: data.bargainId,\n        verifyCode: data.verifyCode,\n        storeId: data.storeId,\n        shippingType: data.shippingType,\n        isChannel: data.isChannel,\n        isRemind: data.isRemind,\n        isSystemDel: data.isSystemDel\n      }\n      _this.dialog = true\n    },\n    refund(data) {\n      this.isAdd = false\n      const _this = this.$refs.form2\n      _this.form = {\n        id: data.id,\n        orderId: data.orderId,\n        uid: data.uid,\n        realName: data.realName,\n        userPhone: data.userPhone,\n        userAddress: data.userAddress,\n        cartId: data.cartId,\n        freightPrice: data.freightPrice,\n        totalNum: data.totalNum,\n        totalPrice: data.totalPrice,\n        totalPostage: data.totalPostage,\n        payPrice: data.payPrice,\n        payPostage: data.payPostage,\n        deductionPrice: data.deductionPrice,\n        couponId: data.couponId,\n        couponPrice: data.couponPrice,\n        paid: data.paid,\n        payTime: data.payTime,\n        payType: data.payType,\n        addTime: data.addTime,\n        status: data.status,\n        refundStatus: data.refundStatus,\n        refundReasonWapImg: data.refundReasonWapImg,\n        refundReasonWapExplain: data.refundReasonWapExplain,\n        refundReasonTime: data.refundReasonTime,\n        refundReasonWap: data.refundReasonWap,\n        refundReason: data.refundReason,\n        refundPrice: data.refundPrice,\n        deliveryName: data.deliveryName,\n        deliveryType: data.deliveryType,\n        deliveryId: data.deliveryId,\n        gainIntegral: data.gainIntegral,\n        useIntegral: data.useIntegral,\n        backIntegral: data.backIntegral,\n        mark: data.mark,\n        isDel: data.isDel,\n        unique: data.unique,\n        remark: data.remark,\n        merId: data.merId,\n        isMerCheck: data.isMerCheck,\n        combinationId: data.combinationId,\n        pinkId: data.pinkId,\n        cost: data.cost,\n        seckillId: data.seckillId,\n        bargainId: data.bargainId,\n        verifyCode: data.verifyCode,\n        storeId: data.storeId,\n        shippingType: data.shippingType,\n        isChannel: data.isChannel,\n        isRemind: data.isRemind,\n        isSystemDel: data.isSystemDel\n      }\n      _this.dialog = true\n    },\n    detail(data) {\n      this.isAdd = false\n      const _this = this.$refs.form1\n      _this.form = {\n        id: data.id,\n        orderId: data.orderId,\n        payTypeName: data.payTypeName,\n        statusName: data.statusName,\n        uid: data.uid,\n        realName: data.realName,\n        userPhone: data.userPhone,\n        userAddress: data.userAddress,\n        cartId: data.cartId,\n        freightPrice: data.freightPrice,\n        totalNum: data.totalNum,\n        totalPrice: data.totalPrice,\n        totalPostage: data.totalPostage,\n        payPrice: data.payPrice,\n        payPostage: data.payPostage,\n        deductionPrice: data.deductionPrice,\n        couponId: data.couponId,\n        couponPrice: data.couponPrice,\n        paid: data.paid,\n        payTime: data.payTime,\n        payType: data.payType,\n        addTime: data.addTime,\n        status: data.status,\n        refundStatus: data.refundStatus,\n        refundReasonWapImg: data.refundReasonWapImg,\n        refundReasonWapExplain: data.refundReasonWapExplain,\n        refundReasonTime: data.refundReasonTime,\n        refundReasonWap: data.refundReasonWap,\n        refundReason: data.refundReason,\n        refundPrice: data.refundPrice,\n        deliveryName: data.deliveryName,\n        deliverySn: data.deliverySn,\n        deliveryType: data.deliveryType,\n        deliveryId: data.deliveryId,\n        gainIntegral: data.gainIntegral,\n        useIntegral: data.useIntegral,\n        backIntegral: data.backIntegral,\n        mark: data.mark,\n        isDel: data.isDel,\n        unique: data.unique,\n        remark: data.remark,\n        merId: data.merId,\n        isMerCheck: data.isMerCheck,\n        combinationId: data.combinationId,\n        pinkId: data.pinkId,\n        cost: data.cost,\n        seckillId: data.seckillId,\n        bargainId: data.bargainId,\n        verifyCode: data.verifyCode,\n        storeId: data.storeId,\n        shippingType: data.shippingType,\n        isChannel: data.isChannel,\n        isRemind: data.isRemind,\n        isSystemDel: data.isSystemDel,\n        nickname: data.userDTO.nickname\n      }\n      _this.dialog = true\n    },\n    getCaculateInfo(){\n      gett().then(res => {\n        this.caculateInfo = {\n          orderPrice : res.priceCount,\n          orderNum : res.orderCount,\n          storeNum : res.goodsCount,\n          userNum : res.userCount,\n        };\n      })\n    },\n    clearCaculateInfo(){\n      this.caculateInfo = {\n        orderPrice : 0,\n        storeNum : 0,\n        orderNum : 0,\n        userNum : 0,\n      };\n    },\n    handleSelectionChange(val) {\n      this.checkList = val;\n      let orderPrice = 0, storeNum = 0, orderNum = 0, userNum = 0;\n      if(val.length !=0 ){\n        this.printChecked = true;\n        let user = [];\n        val.forEach((item,index)=>{\n          orderNum += 1;\n          orderPrice += item.totalPrice;\n          storeNum += item.totalNum;\n          user.push(item.userDTO.account);\n        })\n        user = Array.from(new Set(user));\n        this.caculateInfo = {\n          orderPrice : orderPrice.toFixed(2),\n          storeNum : storeNum,\n          orderNum : orderNum,\n          userNum : user.length,\n        };\n      }else {\n        this.printChecked = false;\n        this.clearCaculateInfo();\n        // this.getCaculateInfo();\n      }\n    },\n    batchSelection(val){\n      let rows = this.data;\n      if (val) {\n        rows.forEach(row => {\n          this.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n    handlePrintOption(val){\n      switch (val) {\n        case '0':\n          this.getPrintList();\n          this.batchHandle = '';\n          break;\n        default:\n          break;\n      }\n    },\n    handleExportOption(val){\n      let list = this.checkList;\n      this.page = 0;\n      this.size = 10000;\n      switch (val) {\n        case \"0\":\n          this.listContent = \"\";\n          this.beforeInit();\n          this.downloadMethod();\n          break;\n        case \"1\":\n          if(list.length == 0){\n            this.$message({\n              message: '请选择订单',\n              type: 'warning'\n            });\n          }else {\n            this.listContent = [];\n            list.forEach((item) => {\n              this.listContent.push(item.orderId);\n            })\n            this.listContent = JSON.stringify(this.listContent);\n            this.beforeInit();\n            this.downloadMethod();\n          }\n          break;\n        default:\n          break;\n      }\n      this.batchExport = \"\";\n    },\n    getPrintList(){\n      let list = this.checkList;\n      if(list.length == 0){\n        this.$message({\n          message: '请选择订单',\n          type: 'warning'\n        });\n      }else {\n        const _this = this.$refs.form5;\n        _this.dialog = true\n      }\n    },\n    checkboxT(row, rowIndex) {\n      return row.id !== 1\n    },\n  }\n}\n",null]}